module S00.System exposing (view)

import Browser exposing (Document)
import Html as E exposing (Html, text)
import Html.Attributes as A


view : Document msg
view =
    Document "システム"
        [ article
            [ summary "概要"
                [ p """
                    このシナリオは語り手が過去の記憶について話すことで物語が展開していく。
                    探索者たちは語り手の過去の姿となり、事件を調査することになる。
                """
                , p """
                    シナリオは複数のセクションから構成されている。
                    各セクションは語り手の記憶の一区切りとなっている。
                    セクションはまず危機的状況から始まり、
                    その後一度過去の場面に移り変わって、未来に起きる危機的状況に対して準備をする期間が与えられる。
                    最後に再度もとの場面に戻って、危機的状況に対処できればセクション終了となる。
                """
                , p """
                    各セクションは次の三つのフェイズからなる。
                """
                , ol
                    [ "問題フェイズ"
                    , "探索フェイズ"
                    , "対処フェイズ"
                    ]
                , p """
                    問題フェイズは何か問題が発生している状態、あるいは問題が発生する直前の状態である。
                    このフェイズは、探索者が問題のより詳細な状況を把握するためにある。
                    より多くの情報を集めると探索フェイズで集めるべき情報や道具が明確になるが、
                    一方で探索に制限がかかるというデメリットもある（後述）。
                    探索者がその状況に至るまでの記憶を思い出そうとした時点で探索フェイズへと移行する。
                    また、探索者が無謀な行動や好ましくない行動をとった際には、強制的に記憶を回想させて探索フェイズへと移行させる。
                """
                , p """
                    探索フェイズは問題が発生する直前の過去の場面である。
                    このフェイズは、探索者が問題に対処するための情報を集め、道具等を準備するためにある。
                    問題フェイズの開始時の状況に近い場面まで進行すると、回想を終えて対処フェイズへと移行する。
                    探索者がゲームの進行上好ましくない行動をとった場合には、強制的に対処フェイズへと移行してもよい。
                """
                , p """
                    対処フェイズは問題フェイズ（あるいは対処フェイズ）にて回想を始めたときの状態から始まる。
                    このフェイズで、探索者は探索フェイズで得た知識や道具を用いて問題に対処する。
                    無事問題に対処できた場合には、次のセクションへと進む。
                    対処に失敗した場合にはスクリプトに従って、次のセクションへ進むか、やり直すかを決める。
                    探索フェイズで得た知識や道具が不十分で、対処が不可能である場合には再度回想して探索フェイズへと移行してもよい。
                    その場合は時間短縮のため、探索フェイズの任意の場面から始め、任意の場面で終わらせるとよい。
                    探索者がゲームの進行上好ましくない行動をとった場合には、語り手の言葉により探索者の行動や思考を強制してもよい。
                """
                , p """
                    シナリオの全てのセクションを終えるとセッション終了となる。
                """
                ]
            , memory "記憶と懐疑状態"
                [ p """
                    各セクションでは未来の場面が先にあり、その後、その場面へと繋がるように過去の場面を進行する。
                    また、場合によっては探索フェイズを繰り返すことによって同じ場面を何度も繰り返す可能性もある。
                    そのため、対処フェイズにおいて記憶に矛盾や書き換えが生じる可能性があり、
                    キーパーはこれらを適切に取り扱う必要がある。
                """
                , p """
                    記憶には優先度があり、矛盾が生じた場合には最も優先度の高い記憶の内容が真実となり得る。
                    優先度が最も高いのは問題フェイズおよび対処フェイズにて得た記憶であり、これらはいかなる場合でも真実となる。
                    次いで、探索フェイズで得た記憶のうち最近回想したものほど高い優先度を得る。
                """
                , p """
                    また、優先度に関わりなく、記憶の矛盾や書き換えに探索者が気づいた場合、探索者は自身の記憶と状況との不一致に恐怖を覚える。
                    このとき探索者は0/1D3でSANチェックをし、さらにその結果に関わらず懐疑状態に陥る。
                    気づいたかどうかはプレイヤーの申告によるが、矛盾が明らかな場合にはキーパーの判断で適用してもよい。
                """
                , p """
                    懐疑状態に陥った探索者は探索フェイズで得た記憶の内容をなぞる度に幸運ロールをする。
                    ただし、シナリオ上明らかな真実や他の懐疑状態でない探索者の記憶から真実であると証明できる記憶は無条件で成功となる。
                    成功した場合には記憶は真実となる。
                    しかし、失敗した場合には記憶は誤りとなり、探索者は0/1D3でSANチェックをした上でより強い懐疑状態へと陥る。
                    懐疑の度合が大きくなるほど、幸運ロールの成功値を1/2,1/3,...と減少させていく。
                    セクションの終了時や成功が複数回続いた場合には探索者は懐疑状態を脱する。
                """
                , p """
                    問題フェイズでは状況をより詳細に把握するほど探索フェイズにおける目的が明確になるが、
                    一方で真実でなければならない内容が増えるため、より矛盾が発生しやすくなり、懐疑状態に陥りやすくなる。
                    例えば、時計を確認してしまうと、その時刻に合わせて探索フェイズを終えなければならなくなる。
                    逆に時刻を確認しなかった場合には、探索フェイズを終えた時刻がそのときの時刻になる。
                """
                ]
            ]
        ]


article : List (Html msg) -> Html msg
article =
    E.article [ A.id "contents", A.class "system" ]


section : String -> String -> List (Html msg) -> Html msg
section class heading =
    (::) (E.h1 [ A.class class ] [ text heading ])
        >> E.section []


summary : String -> List (Html msg) -> Html msg
summary =
    section "summary"


memory : String -> List (Html msg) -> Html msg
memory =
    section "memory"


p : String -> Html msg
p =
    text >> List.singleton >> E.p []


ol : List String -> Html msg
ol =
    List.map (text >> List.singleton >> E.li []) >> E.ol []
