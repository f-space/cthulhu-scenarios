module S00.System exposing (view)

import Browser exposing (Document)
import Html as E exposing (Html, text)
import Html.Attributes as A
import Markdown


type alias System =
    String


system : System
system =
    """
# 概要

このシナリオは語り手が過去の記憶について話すことで物語が展開していく。
探索者たちは語り手の過去の姿となり、事件を調査することになる。

シナリオは複数のセクションから構成されている。
各セクションは語り手の記憶の一区切りとなっている。
セクションはまず危機的状況から始まり、
その後一度過去の場面に移り変わって、未来に起きる危機的状況に対して準備をする期間が与えられる。
最後に再度もとの場面に戻って、危機的状況に対処できればセクション終了となる。

各セクションは次の三つのフェイズからなる。

1. 問題フェイズ
1. 探索フェイズ
1. 対処フェイズ

問題フェイズは何か問題が発生している状態、あるいは問題が発生する直前の状態である。
このフェイズは、探索者が問題のより詳細な状況を把握するためにある。
より多くの情報を集めると探索フェイズで集めるべき情報や道具が明確になるが、
一方で探索に制限がかかるというデメリットもある（後述）。
探索者がその状況に至るまでの記憶を思い出そうとした時点で探索フェイズへと移行する。

探索フェイズは問題が発生する直前の過去の場面である。
このフェイズは、探索者が問題に対処するための情報を集め、道具等を準備するためにある。
問題フェイズの開始時の状況に近い場面まで進行すると、回想を終えて対処フェイズへと移行する。

対処フェイズは問題フェイズ（あるいは直前の対処フェイズ）にて回想を始めたときの状態から始まる。
このフェイズで、探索者は探索フェイズで得た知識や道具を用いて問題に対処する。
無事問題に対処できた場合には、次のセクションへと進む。
対処に失敗した場合にはスクリプトに従って、次のセクションへ進むか、やり直すかを決める。
探索フェイズで得た知識や道具が不十分で、対処が不可能である場合には再度回想して探索フェイズへと移行してもよい。
その場合は時間短縮のため、探索フェイズの任意の場面から始め、任意の場面で終わらせるとよい。

シナリオの全てのセクションを終えるとセッション終了となる。

# 記憶と懐疑状態

各セクションでは未来の場面が先にあり、その後、その場面へと繋がるように過去の場面を進行する。
また、場合によっては探索フェイズを繰り返すことによって同じ場面を何度も繰り返す可能性もある。
そのため、対処フェイズにおいて記憶に矛盾や書き換えが生じる可能性があり、
キーパーはこれらを適切に取り扱う必要がある。

記憶には優先度を設定する。
矛盾が生じた場合には最も優先度の高い記憶の内容を真実とする。
優先度が最も高いのは問題フェイズおよび対処フェイズにて得た記憶であり、これらはいかなる場合でも真実となる。
次いで、探索フェイズで得た記憶のうち直近に回想したものほど高い優先度を得る。

記憶の矛盾や書き換えに探索者が気づいた場合、
探索者は自身の記憶と状況との不一致に恐怖を覚えたとして0/1D3でSANチェックをする。
また、このとき探索者はその結果に関わらず懐疑状態に陥り後述のペナルティを負う。
気づいたかどうかはプレイヤーの申告によるが、矛盾が明らかな場合にはキーパーの判断で適用してもよい。

懐疑状態に陥った探索者は探索フェイズで得た記憶の内容を利用する度に幸運ロールをする。
ロールに成功した場合は記憶は真実として、失敗した場合は偽りとして扱われる。
ただし、シナリオ上の真実や他の懐疑状態でない探索者の記憶から真実であると証明できる記憶は無条件で成功となる。

また、ロールに失敗した場合、探索者は0/1D3でSANチェックをした上でより強い懐疑状態へと陥る。
懐疑状態はその度合が増す度に、次回の記憶判定時のロールの目標値を10減少する。
低くなりすぎると進行に問題が生じる可能性があるため、最低値はキーバーの裁量によって決める。
セクションの終了時や成功が複数回続いた場合には探索者は懐疑状態を脱する。

問題フェイズでは状況をより詳細に把握するほど探索フェイズにおける目的が明確になるが、
一方で真実でなければならない内容が増えるため、より矛盾が発生しやすくなり、懐疑状態に陥りやすくなる。
例えば、時計を確認してしまうと、その時刻に合わせて探索フェイズを終えなければならなくなる。
逆に時刻を確認しなかった場合には、探索フェイズを終えた時刻がそのときの時刻になる。

# 緊急時の対処

探索者がゲーム進行上好ましくない行動を取った場合の対策として次の対処が考えられる。

* 語り手の台詞により行動を強制する。
* 偽りの記憶として処理する。

問題フェイズおよび対処フェイズは語り手の記憶として進行している。
そのため語り手としてその時の判断を語ればそれは必ず真実となり、探索者の行動を強制することができる。
これは問題フェイズでなかなか記憶の回想をしようとしない場合に、
強制的に探索フェイズ移行させる用途でも利用できる。

探索フェイズ中に語り手の台詞を挟むことも不可能ではないが、
偽りの記憶となり得る探索フェイズ中に真実でなければならない語り手の言葉を混ぜると、
管理が難しくなるため十分に注意が必要である。

探索フェイズでの行動は全て偽りの記憶として処理ができる。
そのため例えば探索フェイズ中に探索者たちが舞台から脱出してしまった場合には、
強制的に回想を終えて、対処フェイズ移行時のその場所にいるという真実との矛盾として処理できる。
"""


view : Document msg
view =
    Document "システム"
        [ article <| markdown system ]


article : List (Html msg) -> Html msg
article =
    E.article [ A.id "contents", A.class "system" ]


markdown : String -> List (Html msg)
markdown =
    Markdown.toHtml Nothing
